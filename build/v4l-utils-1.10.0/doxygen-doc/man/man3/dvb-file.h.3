.TH "lib/include/libdvbv5/dvb-file.h" 3 "Sun Jan 24 2016" "Version 1.10.0" "libdvbv5" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lib/include/libdvbv5/dvb-file.h \- Provides interfaces to deal with DVB channel and program files\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'dvb\-fe\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBdvb_elementary_pid\fP"
.br
.RI "\fIassociates an elementary stream type with its PID \fP"
.ti -1c
.RI "struct \fBdvb_entry\fP"
.br
.RI "\fIRepresents one entry on a DTV file\&. \fP"
.ti -1c
.RI "struct \fBdvb_file\fP"
.br
.RI "\fIDescribes an entire DVB file opened\&. \fP"
.ti -1c
.RI "struct \fBdvb_parse_table\fP"
.br
.RI "\fIDescribes the fields to parse on a file\&. \fP"
.ti -1c
.RI "struct \fBdvb_parse_struct\fP"
.br
.RI "\fIDescribes the format to parse an specific delivery system\&. \fP"
.ti -1c
.RI "struct \fBdvb_parse_file\fP"
.br
.RI "\fIDescribes an entire file format\&. \fP"
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBdvb_file_formats\fP { \fBFILE_UNKNOWN\fP, \fBFILE_ZAP\fP, \fBFILE_CHANNEL\fP, \fBFILE_DVBV5\fP, \fBFILE_VDR\fP }
.RI "\fIKnown file formats\&. \fP""
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "static void \fBdvb_file_free\fP (struct \fBdvb_file\fP *\fBdvb_file\fP)"
.br
.RI "\fIDeallocates memory associated with a struct \fBdvb_file\fP\&. \fP"
.ti -1c
.RI "struct \fBdvb_file\fP * \fBdvb_read_file\fP (const char *fname)"
.br
.RI "\fIRead a file at libdvbv5 format\&. \fP"
.ti -1c
.RI "int \fBdvb_write_file\fP (const char *fname, struct \fBdvb_file\fP *\fBdvb_file\fP)"
.br
.RI "\fIWrite a file at libdvbv5 format\&. \fP"
.ti -1c
.RI "struct \fBdvb_file\fP * \fBdvb_read_file_format\fP (const char *fname, uint32_t delsys, enum \fBdvb_file_formats\fP format)"
.br
.RI "\fIRead a file on any format natively supported by the library\&. \fP"
.ti -1c
.RI "int \fBdvb_write_file_format\fP (const char *fname, struct \fBdvb_file\fP *\fBdvb_file\fP, uint32_t delsys, enum \fBdvb_file_formats\fP format)"
.br
.RI "\fIWrite a file on any format natively supported by the library\&. \fP"
.ti -1c
.RI "int \fBdvb_store_entry_prop\fP (struct \fBdvb_entry\fP *entry, uint32_t cmd, uint32_t value)"
.br
.RI "\fIStores a key/value pair on a DVB file entry\&. \fP"
.ti -1c
.RI "int \fBdvb_retrieve_entry_prop\fP (struct \fBdvb_entry\fP *entry, uint32_t cmd, uint32_t *value)"
.br
.RI "\fIRetrieves the value associated witha key on a DVB file entry\&. \fP"
.ti -1c
.RI "int \fBdvb_store_channel\fP (struct \fBdvb_file\fP **\fBdvb_file\fP, struct \fBdvb_v5_fe_parms\fP *parms, struct \fBdvb_v5_descriptors\fP *\fBdvb_desc\fP, int get_detected, int get_nit)"
.br
.RI "\fIstored a new scanned channel into a \fBdvb_file\fP struct \fP"
.ti -1c
.RI "int \fBdvb_parse_delsys\fP (const char *name)"
.br
.RI "\fIAncillary function that seeks for a delivery system\&. \fP"
.ti -1c
.RI "enum \fBdvb_file_formats\fP \fBdvb_parse_format\fP (const char *name)"
.br
.RI "\fIAncillary function that parses the name of a file format\&. \fP"
.ti -1c
.RI "struct \fBdvb_file\fP * \fBdvb_parse_format_oneline\fP (const char *fname, uint32_t delsys, const struct \fBdvb_parse_file\fP *parse_file)"
.br
.RI "\fIRead and parses a one line file format\&. \fP"
.ti -1c
.RI "int \fBdvb_write_format_oneline\fP (const char *fname, struct \fBdvb_file\fP *\fBdvb_file\fP, uint32_t delsys, const struct \fBdvb_parse_file\fP *parse_file)"
.br
.RI "\fIWrites a file into an one line file format\&. \fP"
.ti -1c
.RI "int \fBdvb_write_format_vdr\fP (const char *fname, struct \fBdvb_file\fP *\fBdvb_file\fP)"
.br
.RI "\fIWrites a file into vdr format (compatible up to version 2\&.1) \fP"
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const struct \fBdvb_parse_file\fP \fBchannel_file_format\fP"
.br
.RI "\fIFile format definitions for dvb-apps channel format\&. \fP"
.ti -1c
.RI "const struct \fBdvb_parse_file\fP \fBchannel_file_zap_format\fP"
.br
.RI "\fIFile format definitions for dvb-apps zap format\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Provides interfaces to deal with DVB channel and program files\&. 


.PP
\fBCopyright:\fP
.RS 4
GNU General Public License version 2 (GPLv2) 
.RE
.PP
\fBAuthor:\fP
.RS 4
Mauro Carvalho Chehab
.RE
.PP
There are basically two types of files used for DVB:
.IP "\(bu" 2
files that describe the physical channels (also called as transponders);
.IP "\(bu" 2
files that describe the several programs found on a MPEG-TS (also called as zap files)\&.
.PP
.PP
The libdvbv5 library defines an unified type for both types\&. Other applications generally use different formats\&.
.PP
The purpose of the functions and structures defined herein is to provide support to read and write to those different formats\&.
.PP
\fBBug Report\fP
.RS 4
Please submit bug reports and patches to linux-media@vger.kernel.org 
.RE
.PP

.PP
Definition in file \fBdvb\-file\&.h\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for libdvbv5 from the source code\&.
